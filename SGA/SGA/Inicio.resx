<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgCadastrarCliente.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EqplA3roP2N8ESVe5HbjAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        6QAAAOkBVJIUSwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAOeSURBVFhHtZfJ
        T1NRFMa7c4gaNya61ehOE5f+Iw5xUVraMhgWBrcsjIaoMepCccBpoVKefbfDa4sQpIICMsRoakQQB1qR
        qQJiq3Ties7r7fDa2/Y9Kl/yS5qXe8933rv3nnuqU6sG76MdJpfthEkSW82SOAzMAzEG/oZntjtmNzlu
        dDq3s2mVy+whB8wSuQcGEYCqJGJ2i3drJNt+Fka7TgvCFnjbyxAsnhdcCzGLRC5V+R5sZmHVCTO3SKKf
        E3C9DFqeiXtY+NKqdtoOwwRcU16gSgianLZDzIYvfHMYuBHmaYL1HmE3s1MK1wkGvM2bsBGM4v5itlmx
        DcebUDEWN1E+c5OzzDal1FGraLeX5PpQPzXY26lJsqWf/VYsBTvnikn/izqPnU6EFmiV2CZjdAjyc/ji
        LbI5Vjh4oKXIKKh126nZlXmzAsjYe/pjZSWTAGIgVgpVNSJXTCyvvInlgDpBW98M008/4e3sVgrHt2BM
        88seGk0k6HhoXpFAGr2j/RRuPqztBZNLcb6vB4xDFBX6E8kENBBYZ/Y1Lva/oOFoVB7TMfFRYZwznsD6
        yxdLgQmPxi4PfRX4RtfW1uTAqNwEkMYOJ+2cHKfJnDEX+p4rxmQg1jFMYCHfKB/cSOIHP/0bj7OQWcWS
        CTo6HaQj3wM0+GtJYYwKLC/Ja14kgWVMIJpvmMuNkQE6HwmzcNp1pb+Xb54iVjSBJl8X9c/NsjDrU/fk
        BM80C0klULAEuIHiySQLsz69m5mmxmKfPg1bAu4mbOrppP7ZGRZOm3xfJmk1VD6uaQ560oabENooTgJp
        WobV74Gp5UV6tfSaK0gdQ+jheMa51EG1I3AKVhOFpwCXaig4Ra8N9FEDx6QUBqdQp6sXhG1gEs435XEG
        6oDv62dlHYCvwwteDjiaq1V2+075PsAGkmdYjHO93fIFU0kCsAEdsjmKdULYXnMNeVig5OL+KFbnS6En
        1vhJh3CQ2aeE3SvPqBy10GzgXc8zKoaetN9ntlmxlmww30AteAkZ4FbkGeaCR88iSVuZrVLYpcA1G+AZ
        qKXa+RTXt5j5Yo3tcek/K9g6Q6BgfmAt4Ncw2gVc65wEnoSMEjnCbErL4BV2mVxiLy+4FuBlUl8DP7v9
        4T4WXp0avN5N2L1CIFU1ogh40TVz23C1wn2BDSQE0pJI2OISbxvd4l4WpnJhxYREjkHRugUGr4E5AN8Q
        wd/wzHYTGtSjOJZNKyOd7h88sZWw1QHNgAAAAABJRU5ErkJggg==
</value>
  </data>
</root>